#!/usr/bin/env lua54
-- Copyright (c) 2022 Mark Johnston <markj@FreeBSD.org>

local Argparse = require 'argparse'

local Task = require 'lib.bricoler.task'
local TaskSched = require 'lib.bricoler.tasksched'
local Util = require 'lib.bricoler.util'

-- Find a path for this script and load task definitions from the relative dir.
local script = Util.basename(arg[0])
local scriptdir = Util.dirname(arg[0])
local taskdir = scriptdir .. "/tasks"
local tasks = {}
local default_task = "list-tasks"
Util.fsvisit(taskdir, function (dir, file, attr)
    if attr.mode ~= "file" then
        return
    end

    local path = dir .. "/" .. file
    local name = path:match("^" .. taskdir .. "/+(.+)%.task$")
    if name then
        -- XXX-MJ make sure there's no invalid chars.
        tasks[name] = Task{path = path}
    else
        Util.warn("Ignored file '" .. path .. "' in task directory.")
    end
end)

local cmds = {}
local parser = Argparse(script, "Manage and run tasks.")
cmds.runtask = parser:command("runtask")
    :description("Run the specified task, or list available tasks.")
cmds.runtask:flag("-s --show"):description("Print the computed task schedule.")
cmds.runtask:option("-p --param")
    :description("Specify a parameter for one or more tasks.")
    :count("*")
cmds.runtask:option("--workdir")
    :description("Work directory under which to run tasks. " ..
                 "Overrides ${BRICOLER_WORKDIR}.")
local taskchoices = Util.tablekeys(tasks)
table.insert(taskchoices, default_task)
cmds.runtask:argument("task")
    :description("Task name.")
    :default(default_task)
    :choices(taskchoices)

local args = parser:parse()
if args.runtask then
    if args.task == default_task then
        for k, _ in pairs(tasks) do
            print(k)
        end
        os.exit(0)
    end
    local sched = TaskSched{universe = tasks, target = args.task}
    sched:bind(args.param)
    if args.show then
        sched:print()
    else
        sched:run()
    end
end
