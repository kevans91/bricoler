-- Copyright (c) 2022 Mark Johnston <markj@FreeBSD.org>

Descr = [[
Fetch a FreeBSD VM image from https://ftp.freebsd.org.
]]

Params = {
    arch = {
        descr = "Target platform of the image, e.g., amd64, defaults to host.",
        default = uname_m()
    },
    format = {
        descr = "VM image format.",
        default = "raw",
    },
    version = {
        descr = "Version to fetch, e.g., 13.1-RELEASE, 14.0-CURRENT.",
        required = true,
    },
    uncompress = {
        descr = "Uncompress the downloaded image",
        default = false,
    }
}

Outputs = {
    image = {
        descr = "Path to the fetched VM image file.",
    }
}

function Run(_, params, _, outputs)
    local compsuffix = ".xz"

    local vers, reltype = params.version:match("^(%d+%.%d)%-([%w]+)$")
    if not vers or not reltype then
        error("Invalid version '" .. params.version .. "'.")
    end

    local dir = "releases"
    if reltype == "CURRENT" or reltype == "STABLE" then
        dir = "snapshots"
    end
    local url = "https://download.freebsd.org/ftp/" .. dir .. "/VM-IMAGES/" ..
                params.version .. "/" .. params.arch .. "/Latest/" ..
                "FreeBSD-" .. params.version .. "-" .. params.arch .. "." ..
                params.format .. compsuffix

    local imagepath = outputs.image .. compsuffix
    system("fetch -o " .. imagepath .. " " .. url)

    -- XXX-MJ how do we handle compression?  Maybe the output should be a
    -- directory containing the fetched file with the original name.
    -- XXX-MJ also provide a decompress_file() function which uses the suffix or
    -- file(1) to decide which decompressor to use.
    if params.uncompress then
        system("unxz " .. imagepath)
    end
end

-- vi: ft=lua
