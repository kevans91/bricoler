-- Copyright (c) Mark Johnston <markj@FreeBSD.org>

Descr = [[
Make a git repository available, either by cloning an existing repository,
or updating an existing clone.
]]

Params = {
    repo = {
        descr = "URL for the git repository to check out",
        required = true,
    },
    branch = {
        descr = "git branch to check out"
    },
    clone = {
        descr = "Whether to clone the repository or make a symlink",
        default = true
    }
}

Outputs = {
    checkout = {
        descr = "A copy of the checked out repository",
    }
}

function Run(_, params, _, outputs)
    local attr = fs.attributes(outputs.checkout)
    if params.clone then
        if attr and fs.attributes(outputs.checkout .. "/.git") then
            -- XXX-MJ need to handle the case where fast-forward isn't possible
            system(("git -C %s pull"):format(outputs.checkout))
        else
            local branch = params.branch and "--branch=" .. params.branch or ""
            system(("git clone --depth=1 %s %s %s")
                   :format(branch, params.repo, outputs.checkout))
        end
    else
        -- The repo URI must be a filesystem path.
        local uri = params.repo:match("^file://(/.*)$")
        if not uri then
            uri = params.repo:match("^/")
            if not uri then
                error("Cannot link non-local repository")
            end
        end

        -- XXX-MJ check whether this is actually a git repo.
        -- XXX-MJ can't use system() at the moment since it raises an error

        system(("ln -s %s %s"):format(uri, outputs.checkout))
    end
end

-- vi: ft=lua
